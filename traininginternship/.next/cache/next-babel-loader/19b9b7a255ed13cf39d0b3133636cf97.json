{"ast":null,"code":"import _Number$parseInt from \"@babel/runtime-corejs2/core-js/number/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/Users/jawad/Desktop/trainings/internship-training/traininginternship/src/pages/details.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Loading from '../shared/Loading';\nimport ReactMarkdown from 'react-markdown';\nimport fakeData from '../fakeData.json';\nimport { Store } from \"../core/redux/store\";\nimport Link from 'next/link';\nimport { useRouter } from \"next/router\";\n\nconst getLessonById = id => new _Promise(res => {\n  setTimeout(() => {\n    res(fakeData.find(d => d.id === id));\n  }, 1000);\n});\n\nconst Details = props => {\n  const router = useRouter();\n  const {\n    state,\n    dispatch\n  } = React.useContext(Store);\n\n  const id = _Number$parseInt(props.match.params.id);\n\n  let training = undefined;\n\n  function redirection() {\n    return window.location = \"\".concat(process.env.REACT_APP_URL_BASE_PAYMENT, \"?id=\").concat(id, \"&redirectTo=https%3A%2F%2Fdev.community.hackages.io%2Factivity%2Fevent%2F\").concat(id);\n  }\n\n  useEffect(() => {\n    getLessonById(id).then(data => {\n      training = data;\n      dispatch({\n        type: \"ADD_TRAINING\",\n        payload: training\n      });\n    });\n  }, [id, training]);\n  const trainings = state.trainings;\n  training = trainings.find(t => t.id === id);\n\n  if (training) {\n    const days = training.dates.map((date, index) => {\n      if (index === 0) {\n        return \"From \" + date + \" \";\n      } else if (index === training.dates.length - 1) {\n        return \"to \" + date;\n      }\n\n      return \"\";\n    });\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Details\"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, router.query.id), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Title : \", training.title), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Date : \", training.dates[0]), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"days : \", training.dates.length), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, days), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Price : \", training.price + ' €', \" / day \"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Language : \", training.topics[0].name), __jsx(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" Description \"), __jsx(ReactMarkdown, {\n      source: training.activity.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), __jsx(Button, {\n      onClick: redirection,\n      variant: \"outlined\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Buy your training\"));\n  } else {\n    return __jsx(React.Fragment, null, __jsx(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n};\n\nexport default Details;","map":{"version":3,"sources":["/Users/jawad/Desktop/trainings/internship-training/traininginternship/src/pages/details.js"],"names":["React","useEffect","Button","Loading","ReactMarkdown","fakeData","Store","Link","useRouter","getLessonById","id","res","setTimeout","find","d","Details","props","router","state","dispatch","useContext","match","params","training","undefined","redirection","window","location","process","env","REACT_APP_URL_BASE_PAYMENT","then","data","type","payload","trainings","t","days","dates","map","date","index","length","query","title","price","topics","name","activity","description"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Loading from '../shared/Loading';\nimport ReactMarkdown from 'react-markdown';\nimport fakeData from '../fakeData.json';\nimport {Store} from \"../core/redux/store\";\nimport Link from 'next/link'\nimport { useRouter} from \"next/router\";\n\n\nconst getLessonById = (id) => new Promise(res => {\n    setTimeout(() => {\n        res(fakeData.find(d => d.id === id))\n    }, 1000)\n});\n\nconst Details = (props) => {\n    const router = useRouter();\n    const {state, dispatch} = React.useContext(Store);\n    const id = Number.parseInt(props.match.params.id);\n    let training = undefined;\n\n    function redirection() {\n        return window.location = `${process.env.REACT_APP_URL_BASE_PAYMENT}?id=${id}&redirectTo=https%3A%2F%2Fdev.community.hackages.io%2Factivity%2Fevent%2F${id}`\n    }\n\n    useEffect(() => {\n        getLessonById(id).then(\n            (data) => {\n                training = data;\n                dispatch({type: \"ADD_TRAINING\", payload: training})\n            }\n        );\n\n    }, [id, training]);\n\n    const trainings = state.trainings;\n    training = trainings.find(t => t.id === id);\n\n    if (training) {\n\n        const days = training.dates.map(\n            (date, index) => {\n                if (index === 0) {\n                    return \"From \" + date + \" \";\n                } else if (index === training.dates.length - 1) {\n                    return \"to \" + date;\n                }\n\n                return \"\";\n\n            });\n\n        return (\n            <div>\n                <h1>Details</h1>\n                <p>{router.query.id}</p>\n                <p>Title : {training.title}</p>\n                <p>Date : {training.dates[0]}</p>\n                <p>days : {training.dates.length}</p>\n                <p>{days}</p>\n                <p>Price : {(training.price) + ' €'} / day </p>\n                <p>Language : {training.topics[0].name}</p>\n\n                <section>\n                    <h2> Description </h2>\n                    <ReactMarkdown source={training.activity.description}/>\n                </section>\n\n                <Button\n                    onClick={redirection} variant=\"outlined\" color=\"primary\">\n                    Buy your training\n                </Button>\n\n\n            </div>\n        );\n    } else {\n        return (\n            <>\n                <Loading></Loading>\n            </>\n        )\n    }\n};\n\nexport default  Details;\n"]},"metadata":{},"sourceType":"module"}