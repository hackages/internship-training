{"ast":null,"code":"var _jsxFileName = \"/Users/jawad/Desktop/trainings/internship-training/traininginternship/src/pages/Details/[id].js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Loading from '../../shared/Loading';\nimport ReactMarkdown from 'react-markdown';\nimport fakeData from '../../fakeData.json';\nimport { Store } from \"../../core/redux/store\";\nimport Link from 'next/link';\nimport { useRouter } from \"next/router\";\nimport { StoreProvider } from \"../../core/redux/store\";\n\nconst getLessonById = id => new Promise(res => {\n  setTimeout(() => {\n    res(fakeData.find(d => d.id == id));\n  }, 1000);\n});\n\nconst Details = props => {\n  const {\n    0: training,\n    1: setTraining\n  } = useState();\n  const router = useRouter();\n  const {\n    state,\n    dispatch\n  } = React.useContext(Store);\n  const id = router.query.id;\n\n  function redirection() {\n    return window.location = `${process.env.REACT_APP_URL_BASE_PAYMENT}?id=${id}&redirectTo=https%3A%2F%2Fdev.community.hackages.io%2Factivity%2Fevent%2F${id}`;\n  } // useEffect(() => {\n  //        dispatch( {type: \"ADD_TRAINING\", payload: trainings});\n  // }, []);\n\n\n  useEffect(() => {\n    getLessonById(id).then(data => {\n      if (data) {\n        setTraining(data);\n        dispatch({\n          type: \"ADD_TRAINING\",\n          payload: data\n        });\n      }\n    });\n  }, [id, training]);\n\n  if (training) {\n    const days = training.dates.map((date, index) => {\n      if (index === 0) {\n        return \"From \" + date + \" \";\n      } else if (index === training.dates.length - 1) {\n        return \"to \" + date;\n      }\n\n      return \"\";\n    });\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Details\"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, id), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Title : \", training.title), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Date : \", training.dates[0]), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"days : \", training.dates.length), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, days), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Price : \", training.price + ' €', \" / day \"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Language : \", training.topics[0].name), __jsx(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Description \"), __jsx(ReactMarkdown, {\n      source: training.activity.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), __jsx(Button, {\n      onClick: redirection,\n      variant: \"outlined\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Buy your training\"));\n  } else {\n    return __jsx(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    });\n  }\n};\n\nexport default Details;","map":{"version":3,"sources":["/Users/jawad/Desktop/trainings/internship-training/traininginternship/src/pages/Details/[id].js"],"names":["React","useEffect","useState","Button","Loading","ReactMarkdown","fakeData","Store","Link","useRouter","StoreProvider","getLessonById","id","Promise","res","setTimeout","find","d","Details","props","training","setTraining","router","state","dispatch","useContext","query","redirection","window","location","process","env","REACT_APP_URL_BASE_PAYMENT","then","data","type","payload","days","dates","map","date","index","length","title","price","topics","name","activity","description"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Loading from '../../shared/Loading';\nimport ReactMarkdown from 'react-markdown';\nimport fakeData from '../../fakeData.json';\nimport {Store} from \"../../core/redux/store\";\nimport Link from 'next/link'\nimport {useRouter} from \"next/router\";\nimport {StoreProvider} from \"../../core/redux/store\";\n\n\n\nconst getLessonById = (id) => new Promise(res => {\n    setTimeout(() => {\n        res(fakeData.find(d => d.id == id))\n    }, 1000)\n});\n\nconst Details = (props) => {\n    const [training, setTraining] = useState()\n    const router = useRouter();\n    const {state, dispatch} = React.useContext(Store);\n    const id = router.query.id;\n\n    function redirection() {\n        return window.location = `${process.env.REACT_APP_URL_BASE_PAYMENT}?id=${id}&redirectTo=https%3A%2F%2Fdev.community.hackages.io%2Factivity%2Fevent%2F${id}`\n    }\n\n   // useEffect(() => {\n    //        dispatch( {type: \"ADD_TRAINING\", payload: trainings});\n   // }, []);\n\n    useEffect(() => {\n        getLessonById(id).then(\n            (data) => {\n                if(data) {\n                    setTraining(data);\n                    dispatch({type: \"ADD_TRAINING\", payload: data})\n                }\n            }\n        );\n\n    }, [id, training]);\n\n    if (training) {\n\n        const days = training.dates.map(\n            (date, index) => {\n                if (index === 0) {\n                    return \"From \" + date + \" \";\n                } else if (index === training.dates.length - 1) {\n                    return \"to \" + date;\n                }\n\n                return \"\";\n\n            });\n\n        return (\n            <div>\n                <h1>Details</h1>\n                <p>{id}</p>\n                <p>Title : {training.title}</p>\n                <p>Date : {training.dates[0]}</p>\n                <p>days : {training.dates.length}</p>\n                <p>{days}</p>\n                <p>Price : {(training.price) + ' €'} / day </p>\n                <p>Language : {training.topics[0].name}</p>\n\n                <section>\n                    <h2> Description </h2>\n                    <ReactMarkdown source={training.activity.description}/>\n                </section>\n\n                <Button\n                    onClick={redirection} variant=\"outlined\" color=\"primary\">\n                    Buy your training\n                </Button>\n\n\n            </div>\n        );\n    } else {\n        return (\n            <Loading></Loading>\n            )\n    }\n};\n\n\nexport default Details;\n"]},"metadata":{},"sourceType":"module"}