{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Loading from '../../shared/Loading';\nimport ReactMarkdown from 'react-markdown';\nimport fakeData from '../../fakeData.json';\nimport { Store } from \"../../core/redux/store\";\n\nconst getLessonById = id => new Promise(res => {\n  setTimeout(() => {\n    res(fakeData.find(d => d.id === id));\n  }, 1000);\n});\n\nexport const Details = props => {\n  const {\n    state,\n    dispatch\n  } = React.useContext(Store);\n  const id = Number.parseInt(props.match.params.id);\n  let training = undefined;\n\n  function redirection() {\n    return window.location = `${process.env.REACT_APP_URL_BASE_PAYMENT}?id=${id}&redirectTo=https%3A%2F%2Fdev.community.hackages.io%2Factivity%2Fevent%2F${id}`;\n  }\n\n  useEffect(() => {\n    getLessonById(id).then(data => {\n      training = data;\n      dispatch({\n        type: \"ADD_TRAINING\",\n        payload: training\n      });\n    });\n  }, [id, training]);\n  const trainings = state.trainings;\n  training = trainings.find(t => t.id === id);\n\n  if (training) {\n    const days = training.dates.map((date, index) => {\n      if (index === 0) {\n        return \"From \" + date + \" \";\n      } else if (index === training.dates.length - 1) {\n        return \"to \" + date;\n      }\n\n      return \"\";\n    });\n    return __jsx(\"div\", null, __jsx(\"h1\", null, \"Details\"), __jsx(\"p\", null, \"Title : \", training.title), __jsx(\"p\", null, \"Date : \", training.dates[0]), __jsx(\"p\", null, \"days : \", training.dates.length), __jsx(\"p\", null, days), __jsx(\"p\", null, \"Price : \", training.price + ' â‚¬', \" / day \"), __jsx(\"p\", null, \"Language : \", training.topics[0].name), __jsx(\"section\", null, __jsx(\"h2\", null, \" Description \"), __jsx(ReactMarkdown, {\n      source: training.activity.description\n    })), __jsx(Button, {\n      onClick: redirection,\n      variant: \"outlined\",\n      color: \"primary\"\n    }, \"Buy your training\"));\n  } else {\n    return __jsx(React.Fragment, null, __jsx(Loading, null));\n  }\n};","map":null,"metadata":{},"sourceType":"module"}