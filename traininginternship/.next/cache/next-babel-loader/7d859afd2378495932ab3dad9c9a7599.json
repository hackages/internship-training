{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Loading from '../../shared/Loading';\nimport fakeData from '../../fakeData.json';\nimport { Store } from \"../../core/redux/store\";\n\nconst getLessons = () => new Promise(res => {\n  setTimeout(() => {\n    res(fakeData);\n  }, 1000);\n});\n\nexport const Home = props => {\n  const [isLoading, setIsLoading] = React.useState(true);\n  const {\n    state,\n    dispatch\n  } = React.useContext(Store);\n  useEffect(() => {\n    getLessons().then(lessons => {\n      setIsLoading(false);\n      dispatch({\n        type: 'SET_TRAININGS',\n        payload: lessons\n      });\n    });\n  }, [dispatch]);\n  const listless = state.trainings.map(lesson => __jsx(Lesson, {\n    key: lesson.title,\n    value: lesson\n  }));\n\n  if (isLoading) {\n    return __jsx(Loading, null);\n  } else {\n    return __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Trainings offered by Hackages\"), __jsx(List, null, listless));\n  }\n};\nexport const Lesson = props => {\n  const {\n    value\n  } = props;\n  const days = value.dates.map((date, index) => {\n    if (index === 0) {\n      return \"From \" + date + \" \";\n    } else if (index === value.dates.length - 1) {\n      return \"to \" + date;\n    }\n\n    return \"\";\n  });\n  return __jsx(React.Fragment, null, __jsx(ListItem, null, __jsx(Card, {\n    variant: \"outlined\"\n  }, __jsx(CardContent, null, __jsx(\"h1\", null, `${value.dates[0]} ${value.title} `), __jsx(\"h2\", null, days), __jsx(\"p\", null, `${value.dates.length} days  at ${value.location.country} - ${value.location.locality} price ->  ${value.price}â‚¬`), __jsx(\"p\", null, ` langage ->  ${value.topics[0].name}`)), __jsx(CardActions, null, __jsx(Button, {\n    size: \"small\"\n  }, __jsx(Link, {\n    to: `/details/${value.id}`\n  }, \" Order now ! \"))))));\n};","map":null,"metadata":{},"sourceType":"module"}