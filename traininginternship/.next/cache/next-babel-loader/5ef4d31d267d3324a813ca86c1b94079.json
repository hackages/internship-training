{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nexport var Store = React.createContext(undefined);\nvar initialState = {\n  trainings: []\n};\nexport var detailsReducer = function detailsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'SET_TRAININGS') {\n    return {\n      trainings: action.payload\n    };\n  } else if (action.type === 'ADD_TRAINING') {\n    if (state.trainings.find(function (e) {\n      return e.id === action.payload.id;\n    })) {\n      // pour les doublons ( children HOME -> DETAILS -> HOME\n      return {\n        trainings: state.trainings\n      };\n    } else {\n      return {\n        trainings: [].concat(_toConsumableArray(state.trainings), [action.payload])\n      };\n    }\n  }\n\n  return state;\n};\nexport function StoreProvider(props) {\n  var _React$useReducer = React.useReducer(detailsReducer, initialState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var value = {\n    state: state,\n    dispatch: dispatch\n  };\n  return __jsx(Store.Provider, {\n    value: value\n  }, props.children);\n}","map":null,"metadata":{},"sourceType":"module"}