{"ast":null,"code":"import _Number$parseInt from \"@babel/runtime-corejs2/core-js/number/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Loading from '../../shared/Loading';\nimport ReactMarkdown from 'react-markdown';\nimport fakeData from '../../fakeData.json';\nimport { Store } from \"../../core/redux/store\";\n\nvar getLessonById = function getLessonById(id) {\n  return new _Promise(function (res) {\n    setTimeout(function () {\n      res(fakeData.find(function (d) {\n        return d.id === id;\n      }));\n    }, 1000);\n  });\n};\n\nexport var Details = function Details(props) {\n  var _React$useContext = React.useContext(Store),\n      state = _React$useContext.state,\n      dispatch = _React$useContext.dispatch;\n\n  var id = _Number$parseInt(props.match.params.id);\n\n  var training = undefined;\n\n  function redirection() {\n    return window.location = \"\".concat(process.env.REACT_APP_URL_BASE_PAYMENT, \"?id=\").concat(id, \"&redirectTo=https%3A%2F%2Fdev.community.hackages.io%2Factivity%2Fevent%2F\").concat(id);\n  }\n\n  useEffect(function () {\n    getLessonById(id).then(function (data) {\n      training = data;\n      dispatch({\n        type: \"ADD_TRAINING\",\n        payload: training\n      });\n    });\n  }, [id, training]);\n  var trainings = state.trainings;\n  training = trainings.find(function (t) {\n    return t.id === id;\n  });\n\n  if (training) {\n    var days = training.dates.map(function (date, index) {\n      if (index === 0) {\n        return \"From \" + date + \" \";\n      } else if (index === training.dates.length - 1) {\n        return \"to \" + date;\n      }\n\n      return \"\";\n    });\n    return __jsx(\"div\", null, __jsx(\"h1\", null, \"Details\"), __jsx(\"p\", null, \"Title : \", training.title), __jsx(\"p\", null, \"Date : \", training.dates[0]), __jsx(\"p\", null, \"days : \", training.dates.length), __jsx(\"p\", null, days), __jsx(\"p\", null, \"Price : \", training.price + ' â‚¬', \" / day \"), __jsx(\"p\", null, \"Language : \", training.topics[0].name), __jsx(\"section\", null, __jsx(\"h2\", null, \" Description \"), __jsx(ReactMarkdown, {\n      source: training.activity.description\n    })), __jsx(Button, {\n      onClick: redirection,\n      variant: \"outlined\",\n      color: \"primary\"\n    }, \"Buy your training\"));\n  } else {\n    return __jsx(React.Fragment, null, __jsx(Loading, null));\n  }\n};","map":null,"metadata":{},"sourceType":"module"}