{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/Users/jawad/Desktop/trainings/internship-training/traininginternship/src/pages/Home.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Loading from '../shared/Loading';\nimport fakeData from '../fakeData.json';\nimport { Store } from \"../core/redux/store\";\n\nconst getLessons = () => new _Promise(res => {\n  setTimeout(() => {\n    res(fakeData);\n  }, 1000);\n});\n\nlet Home = undefined;\nexport default Home = props => {\n  const [isLoading, setIsLoading] = React.useState(true);\n  const {\n    state,\n    dispatch\n  } = React.useContext(Store);\n  useEffect(() => {\n    getLessons().then(lessons => {\n      setIsLoading(false);\n      dispatch({\n        type: 'SET_TRAININGS',\n        payload: lessons\n      });\n    });\n  }, [dispatch]);\n  const listless = state.trainings.map(lesson => __jsx(Lesson, {\n    key: lesson.title,\n    value: lesson,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n\n  if (isLoading) {\n    return __jsx(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  } else {\n    return __jsx(React.Fragment, null, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Trainings offered by Hackages\"), __jsx(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, listless));\n  }\n};\nexport const Lesson = props => {\n  const {\n    value\n  } = props;\n  const days = value.dates.map((date, index) => {\n    if (index === 0) {\n      return \"From \" + date + \" \";\n    } else if (index === value.dates.length - 1) {\n      return \"to \" + date;\n    }\n\n    return \"\";\n  });\n  return __jsx(React.Fragment, null, __jsx(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Card, {\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"\".concat(value.dates[0], \" \").concat(value.title, \" \")), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, days), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"\".concat(value.dates.length, \" days  at \").concat(value.location.country, \" - \").concat(value.location.locality, \" price ->  \").concat(value.price, \"\\u20AC\")), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \" langage ->  \".concat(value.topics[0].name))), __jsx(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(Button, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(Link, {\n    to: \"/details/\".concat(value.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \" Order now ! \"))))));\n};","map":{"version":3,"sources":["/Users/jawad/Desktop/trainings/internship-training/traininginternship/src/pages/Home.js"],"names":["React","useEffect","Link","ListItem","List","Card","CardActions","CardContent","Button","Loading","fakeData","Store","getLessons","res","setTimeout","Home","undefined","props","isLoading","setIsLoading","useState","state","dispatch","useContext","then","lessons","type","payload","listless","trainings","map","lesson","title","Lesson","value","days","dates","date","index","length","location","country","locality","price","topics","name","id"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Loading from '../shared/Loading';\nimport fakeData from '../fakeData.json';\nimport {Store} from \"../core/redux/store\";\n\nconst getLessons = () => new Promise(res => {\n    setTimeout(() => {\n        res(fakeData)\n    }, 1000)\n});\nlet Home = undefined;\nexport default  Home = (props) => {\n\n    const [isLoading, setIsLoading] = React.useState(true);\n    const {state, dispatch} = React.useContext(Store);\n\n    useEffect(() => {\n        getLessons().then((lessons) => {\n            setIsLoading(false);\n            dispatch({type: 'SET_TRAININGS', payload: lessons});\n        })\n    }, [dispatch]);\n\n    const listless = state.trainings.map(\n        (lesson) => <Lesson key={lesson.title} value={lesson}/>);\n\n    if (isLoading) {\n\n        return (\n            <Loading></Loading>\n        );\n\n    } else {\n\n        return (\n            <>\n                <h1>Trainings offered by Hackages</h1>\n\n                <List>\n                    {listless}\n                </List>\n\n            </>\n        );\n\n    }\n\n};\n\nexport const Lesson = (props) => {\n    const {value} = props;\n\n    const days = value.dates.map(\n        (date, index) => {\n            if (index === 0) {\n                return \"From \" + date + \" \";\n            } else if (index === value.dates.length - 1) {\n                return \"to \" + date;\n            }\n\n            return \"\";\n\n        });\n\n    return (\n        <>\n\n            <ListItem>\n                <Card variant=\"outlined\">\n                    <CardContent>\n                        <h1>\n                            {`${value.dates[0]} ${value.title} `}\n                        </h1>\n                        <h2>\n                            {days}\n                        </h2>\n                        <p>\n                            {`${value.dates.length} days  at ${value.location.country} - ${value.location.locality} price ->  ${(value.price)}â‚¬`}\n                        </p>\n\n                        <p>\n                            {` langage ->  ${value.topics[0].name}`}\n                        </p>\n                    </CardContent>\n                    <CardActions>\n                        <Button size=\"small\"><Link to={`/details/${value.id}`}> Order now ! </Link></Button>\n                    </CardActions>\n                </Card>\n            </ListItem>\n\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}