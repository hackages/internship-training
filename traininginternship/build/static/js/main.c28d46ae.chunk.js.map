{"version":3,"sources":["core/services/lesson.service.js","shared/Loading.js","pages/home/Home.js","pages/details/Details.js","pages/page404.js","shared/Snackbar.js","pages/payment/Payment.js","App.js","serviceWorker.js","index.js"],"names":["config","headers","getLessons","axios","get","process","then","res","data","getLesson","id","Loading","className","CircularProgress","Home","props","console","log","useState","products","setProducts","useEffect","lesson","activities","listless","map","key","title","value","List","Lesson","ListItem","Card","variant","CardContent","dates","length","location","country","locality","price","topics","name","CardActions","Button","size","to","Details","product","setProduct","match","params","activity","description","color","Page404","SimpleSnackbar","snackBarState","useContext","SnackbarContext","Snackbar","anchorOrigin","vertical","horizontal","open","show","autoHideDuration","message","text","Payment","PayementForm","spanStyle","showSnackBar","initialValues","firstname","lastname","email","validate","values","errors","test","onSubmit","setSubmitting","window","touched","handleChange","handleBlur","handleSubmit","type","onChange","onBlur","style","disabled","React","createContext","App","setSnackBarState","Provider","setTimeout","exact","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c28d46ae.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst config = {\n    headers: {'crossdomain': 'true'}\n};\n\nfunction getLessons() {\n    return axios.get(process.env.REACT_APP_URL_BASE + \"activities?types[]=event&types[]=learningPath&sortBy=dates&sortByType=asc&periods[]=upcoming&price=true&privacies[]=public&published=true&toPopulate[]=topics&toPopulate[]=location\", config)\n        .then(res => {\n            return res.data;\n        })\n}\n\nfunction getLesson(id) {\n    return axios.get(process.env.REACT_APP_URL_BASE + \"activities/\" + id + \"?toPopulate[]=subscribers&toPopulate[]=topics&toPopulate[]=location&toPopulate[]=groups&toPopulate[]=owner&toPopulate[]=mentors&toPopulate[]=contacts&toPopulate[]=steps.activities\", config)\n        .then(res => {\n            return res.data;\n        })\n}\n\nexport default {\n    getLessons,\n    getLesson\n}\n\n\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function Loading() {\n\n    return (\n        <div className=\"centered\">\n            <CircularProgress/>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport lesson from '../../core/services/lesson.service';\nimport { Link } from \"react-router-dom\";\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Loading from '../../shared/Loading';\n\n/**\n *\n * Challenge 1 : faire la requete de manière asynchrone avec un petit serveur de base --> Voir JSON server ( npm )\n */\nexport const Home = (props) => {\n    console.log(process.env);\n    console.log(process.env.REACT_APP_URL_BASE);\n\n    const [products, setProducts] = useState({});\n\n    useEffect(() => {\n        lesson.getLessons().then(data => {\n            setProducts(data);\n        })\n    }, []);\n    \n    if (products && products.activities) {\n        \n        const listless = products.activities.map(\n            (lesson) => <Lesson key={lesson.title} value={lesson} />);\n\n        return (\n            <>\n                <h1>Trainings offered by Hackages</h1>\n\n                <List>\n                    {listless}\n                </List>\n\n            </>\n        );\n\n    } else {\n        return (\n            <>\n                <Loading></Loading>\n            </>\n        )\n    }\n};\n\nexport const Lesson = (props) => {\n    const { value } = props;\n\n    return (\n        <>\n\n            <ListItem>\n                <Card variant=\"outlined\">\n                    <CardContent>\n                        <h4>\n                            {`${value.dates[0]} ${value.title} `}\n                        </h4>\n                        <p>\n                            {`${value.dates.length} days  at ${value.location.country} - ${value.location.locality} price ->  ${value.price}€`}\n                        </p>\n\n                        <p>\n                            {` langage ->  ${value.topics[0].name}`}\n                        </p>\n                    </CardContent>\n                    <CardActions>\n                        <Button size=\"small\"><Link to={`/details/${value.id}`}> Order now ! </Link></Button>\n                    </CardActions>\n                </Card>\n            </ListItem>\n\n        </>\n    );\n};","import React, { useEffect, useState } from \"react\";\nimport lesson from '../../core/services/lesson.service';\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport Loading from '../../shared/Loading';\n\nexport const Details = (props) => {\n    const [product, setProduct] = useState({});\n\n    const id = props.match.params.id;\n\n    useEffect(() => {\n        lesson.getLesson(id).then(data => {\n            setProduct(data);\n        })\n    }, [id])\n\n    if (product && product.activity) {\n\n        return (\n            <div>\n                <h1>Details</h1>\n                <p>Title : {product.activity.title}</p>\n                <p>Date : {product.activity.dates[0]}</p>\n                <p>days : {product.activity.dates.length}</p>\n                <p>Price : {product.activity.price + ' €'} / day </p>\n                <p>Language : {product.activity.topics[0].name}</p>\n\n                <section>\n                    <h2> Description </h2>\n                    <p>\n                        {product.activity.description}\n                    </p>\n                </section>\n\n                <Button variant=\"outlined\" color=\"primary\"  >\n                    <Link to={`/payment/${id}`}> Buy </Link>\n                </Button>\n\n            </div>\n        );\n    } else {\n        return (\n            <>\n                <Loading></Loading>\n            </>\n        )\n    }\n};","import React from \"react\";\n\nexport const Page404 = (props) => {\n\n    return (\n        <div>\n\n            <h1>404</h1>\n            <p>Page not found</p>\n\n        </div>\n    );\n};","import React, { useContext } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { SnackbarContext } from \"../App\";\n\n\nexport const SimpleSnackbar = () => {\n\n  const { snackBarState } = useContext(SnackbarContext);\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackBarState.show}\n        autoHideDuration={1000}\n        message={snackBarState.text}\n      />\n\n    </div>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Formik } from 'formik';\nimport { SnackbarContext } from \"../../App\";\nimport Button from \"@material-ui/core/Button\";\nimport lesson from '../../core/services/lesson.service';\nimport Loading from '../../shared/Loading';\n\nexport const Payment = (props) => {\n\n  const [product, setProduct] = useState({});\n\n  const id = props.match.params.id;\n\n  useEffect(() => {\n    lesson.getLesson(id).then(data => {\n      setProduct(data);\n    })\n  }, [id])\n\n  if (product && product.activity) {\n\n    return (\n      <div>\n        <h1>{' The order is about : '} {product.activity.title} </h1>\n        <h3>{product.activity.price + ' €'}</h3>\n\n        <PayementForm value={id}></PayementForm>\n      </div>\n    );\n\n  } else {\n    return (\n      <>\n        <Loading></Loading>\n      </>\n    )\n  }\n};\n\nconst PayementForm = (props) => {\n\n  const spanStyle = {\n    color: 'red'\n  };\n\n  const id  = props.value;\n\n  let { showSnackBar } = useContext(SnackbarContext);\n\n  return (\n    <div>\n      <Formik\n\n        initialValues={{ firstname: '', lastname: '', email: '' }}\n\n        validate={values => {\n\n          const errors = {};\n\n          if (!values.firstname) {\n            errors.firstname = 'Required';\n          } else if (values.firstname.length <= 2) {\n            errors.firstname = \"At least 3 characters are needed\";\n          }\n\n          if (!values.lastname) {\n            errors.lastname = 'Required';\n          } else if (values.lastname.length <= 2) {\n            errors.lastname = \"At least 3 characters are needed\";\n          }\n\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          }\n\n          return errors;\n        }}\n\n        onSubmit={(values, { setSubmitting }) => {\n\n          showSnackBar({ text: \"Validation ok\" });\n          window.location = `${process.env.REACT_APP_URL_BASE_PAYMENT}?id=${id}&redirectTo=https%3A%2F%2Fdev.community.hackages.io%2Factivity%2Fevent%2F${id}&email=${values.email}`;\n\n        }}\n\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit\n\n        }) => (\n            <form onSubmit={handleSubmit}>\n\n              Name <input\n                type=\"text\"\n                name=\"firstname\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.firstname}\n              />\n              <span style={spanStyle}>{errors.firstname && touched.firstname && errors.firstname}</span>\n              <br />\n\n              Surname <input\n                type=\"text\"\n                name=\"lastname\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.lastname}\n              />\n              <span style={spanStyle}>{errors.lastname && touched.lastname && errors.lastname}</span>\n              <br />\n\n             Your mail <input\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              <span style={spanStyle}>{errors.email && touched.email && errors.email}</span>\n\n              <Button size=\"small\" variant=\"outlined\" color=\"primary\" type=\"submit\" disabled={(errors.firstname && errors.lastname && errors.email) ? true : false}>\n                Purchase\n              </Button>\n\n            </form>\n          )}\n      </Formik>\n    </div>\n  );\n\n};","import React from 'react';\nimport './App.css';\nimport { Home } from \"./pages/home/Home\";\nimport { Details } from \"./pages/details/Details\";\nimport { Page404 } from \"./pages/page404\";\nimport { SimpleSnackbar } from \"./shared/Snackbar\";\nimport {\n    BrowserRouter,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport { Payment } from \"./pages/payment/Payment\";\n\nexport const SnackbarContext = React.createContext({});\n\nfunction App() {\n    const [snackBarState, setSnackBarState] = React.useState({ \"show\": false, \"text\": \"\" })\n\n    const showSnackBar = data => {\n        setSnackBarState({ ...data, show: true })\n        setTimeout(() => {\n            setSnackBarState({ show: false })\n        }, 2000)\n    }\n\n    return (\n        <>\n            <SnackbarContext.Provider value={{ snackBarState, showSnackBar }}>\n                <BrowserRouter>\n                    <Switch>\n                        <Route exact path={'/'} component={Home} />\n                        <Route path={'/details/:id'} component={Details} />\n                        <Route path={'/payment/:id'} component={Payment} />\n                        <Route path={'**'} component={Page404} />\n                    </Switch>\n                </BrowserRouter>\n                <SimpleSnackbar></SimpleSnackbar>\n            </SnackbarContext.Provider>\n        </>\n    );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}